@Component
We can use @Component across the application to mark the beans as Spring's managed components.

Spring only pick up and registers beans with @Component  and doesn't look for @Service and @Repository in general.

They are registered in ApplicationContext because they themselves are annotated with @Component:

@Component
public @interface Service {
}

@Component
public @interface Repository {
}

@Repository
@Repository’s job is to catch persistence specific exceptions and rethrow them as one of Spring’s unified unchecked exception.


@Service
We mark beans with @Service to indicate that it's holding the business logic.

